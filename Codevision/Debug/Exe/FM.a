;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <stdio.h>
;
;
;int freq=0;
;int counter=0;
;float time_m=0;
;char strShow[16];
;
;
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 000D {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000E         time_m = (float)2.048*(counter + (float)(TCNT2/256));
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 000F         freq = (int)(256000/time_m);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0010         counter = 0;
;PCODE: $00000020 VOL: 0
; 0000 0011 
; 0000 0012 }
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;
;
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0000 0016 {
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0017         counter++;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0018 
; 0000 0019 }
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;
;void main(void)
; 0000 001C {
;PCODE: $0000002C VOL: 0
; 0000 001D 
; 0000 001E 
; 0000 001F // Port B initialization
; 0000 0020 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0021 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0022 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=P
; 0000 0023 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (1<<PORTB0);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0024 
; 0000 0025 // Port C initialization
; 0000 0026 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0027 DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0028 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0029 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 002A 
; 0000 002B 
; 0000 002C 
; 0000 002D // Timer/Counter 0 initialization
; 0000 002E // Clock source: T0 pin Rising Edge
; 0000 002F // Mode: Normal top=0xFF
; 0000 0030 // OC0 output: Disconnected
; 0000 0031 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (1<<CS02) | (1<<CS01) | (1<<CS00);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0032 TCNT0=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0033 OCR0=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0034 
; 0000 0035 // Timer/Counter 2 initialization
; 0000 0036 // Clock source: System Clock
; 0000 0037 // Clock value: 125.000 kHz
; 0000 0038 // Mode: Normal top=0xFF
; 0000 0039 // OC2 output: Disconnected
; 0000 003A // Timer Period: 2.048 ms
; 0000 003B ASSR=0<<AS2;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 003C TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (1<<CS21) | (0<<CS20);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 003D TCNT2=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 003E OCR2=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 003F 
; 0000 0040 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0041 TIMSK=(0<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0042 
; 0000 0043 
; 0000 0044 lcd_init(16);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0045 #asm("sei")
;PCODE: $00000047 VOL: 0
	sei
;PCODE: $00000048 VOL: 0
; 0000 0046 
; 0000 0047 while (1)
;PCODE: $00000049 VOL: 0
; 0000 0048       {
; 0000 0049             sprintf(strShow, "freqency is: %d", freq);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 004A             lcd_gotoxy(0,0);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 004B             lcd_puts(strShow);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 004C 
; 0000 004D       }
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 004E }
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
